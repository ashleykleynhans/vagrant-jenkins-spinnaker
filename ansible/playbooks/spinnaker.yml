---
- hosts: all
  become: true

  environment:
    JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
    PATH: "{{ ansible_env.PATH }}:/usr/lib/jvm/java-11-openjdk-amd64/bin"
    TERM: vt100

  vars:
    spinnaker_storage_type: minio
    spinnaker_user: spinnaker
    spinnaker_group: spinnaker
    jvm_path: /usr/lib/jvm/java-11-openjdk-amd64/bin

  tasks:
    - name: Include task to install packages that enable apt over HTTPS
      ansible.builtin.include_tasks: includes/apt_over_https.yml

    - name: Include task to install useful packages
      ansible.builtin.include_tasks: includes/install_useful_packages.yml

    - name: Include task to install docker
      ansible.builtin.include_tasks: includes/install_docker.yml

    - name: Create spinnaker user group
      ansible.builtin.group:
        name: "{{ spinnaker_group }}"
        state: present

    - name: Create spinnaker user
      ansible.builtin.user:
        name: "{{ spinnaker_user }}"
        group: "{{ spinnaker_group }}"
        comment: Spinnaker user
        shell: /bin/bash
        create_home: yes
        state: present

    - name: Add an apt signing key for spinnaker-community repo
      ansible.builtin.apt_key:
        url: https://us-apt.pkg.dev/doc/repo-signing-key.gpg
        state: present

    - name: Add spinnaker-community apt repository
      ansible.builtin.apt_repository:
        repo: deb https://us-apt.pkg.dev/projects/spinnaker-community apt main
        state: present

    - name: Install Java
      ansible.builtin.apt:
        name: openjdk-11-jre-headless
        state: present

    # Does not set JAVA_HOME and fails as a result, so JAVA_HONE is set in environment above
    - name: Download Halyard Installation script
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/spinnaker/halyard/{{ halyard_version }}/install/debian/InstallHalyard.sh"
        dest: /tmp/InstallHalyard.sh
        owner: root
        group: root
        mode: 0755

    - name: Check whether Halyard is installed
      ansible.builtin.stat:
        path: /usr/local/bin/hal
      register: hal

    - name: Execute Halyard Installation script
      ansible.builtin.command: "/tmp/InstallHalyard.sh --user {{ spinnaker_user }} -y"
      when: not hal.stat.exists

    - name: Set Spinnaker version in Halyard
      ansible.builtin.shell: "hal config version edit --version {{ spinnaker_version }}"

    - name: Check whether Minio container is running
      ansible.builtin.shell: docker ps --all | grep minio1
      register: minio_running
      ignore_errors: True

    # Latest Minio release has config in a different format, so we use 2018 release
    - name: Run Minio Docker container
      ansible.builtin.command: >-
        docker run -p 127.0.0.1:9090:9000 -d --name minio1 -v /mnt/data:/data \
        -v /mnt/config:/root/.minio minio/minio:RELEASE.2018-07-31T02-11-47Z server /data
      when: minio_running.rc == 1

    - name: Ensure Minio Docker container is running
      ansible.builtin.command: docker start minio1

    - name: Register Minio Secret Key
      ansible.builtin.shell: >-
        docker exec minio1 cat /root/.minio/config.json | jq -r '.credential.secretKey'
      register: minio_secret_key

    - name: Register Minio Access Key
      ansible.builtin.shell: >-
        docker exec minio1 cat /root/.minio/config.json | jq -r '.credential.accessKey'
      register: minio_access_key

    - name: Configure Minio S3 Storage backend in Halyard
      ansible.builtin.shell: >-
        echo {{ minio_secret_key.stdout }} | hal config storage s3 edit --endpoint http://127.0.0.1:9090 \
        --access-key-id {{ minio_access_key.stdout }} \
        --secret-access-key

    - name: Set Minio S3 as Storage backend in Halyard
      ansible.builtin.shell: hal config storage edit --type s3

    - name: Apply Halyard Deployment
      ansible.builtin.shell: hal deploy apply

    - name: Ensure /home/spinnaker/.hal/default/service-settings exists
      ansible.builtin.file:
        path: /home/spinnaker/.hal/default/service-settings
        owner: spinnaker
        group: spinnaker
        mode: 0755
        state: present

  # Setup a handler for restarting Docker daemon
  handlers:
    - name: restart docker
      ansible.builtin.service:
        name: docker
        state: restarted